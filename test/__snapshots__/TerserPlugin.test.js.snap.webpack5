// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`TerserPlugin buildError method 1`] = `
[Error: test.js from Terser
Message]
`;

exports[`TerserPlugin buildError method 2`] = `
[Error: test.js from Terser
Message [test.js:1,1]]
`;

exports[`TerserPlugin buildError method 3`] = `
[Error: test.js from Terser
Message [http://example.com/www/js/one.js:1,1][test.js:1,1]]
`;

exports[`TerserPlugin buildError method 4`] = `
[Error: test.js from Terser
Stack]
`;

exports[`TerserPlugin buildSourceMap method 1`] = `
SourceMapConsumer {
  "_absoluteSources": Array [
    "http://example.com/www/js/one.js",
    "http://example.com/www/js/two.js",
  ],
  "_mappings": "CAAC,IAAI,IAAM,SAAUA,GAClB,OAAOC,IAAID;CCDb,IAAI,IAAM,SAAUE,GAClB,OAAOA",
  "_names": ArraySet {
    "_array": Array [
      "bar",
      "baz",
      "n",
    ],
    "_set": Map {
      "bar" => 0,
      "baz" => 1,
      "n" => 2,
    },
  },
  "_sourceMapURL": undefined,
  "_sources": ArraySet {
    "_array": Array [
      "one.js",
      "two.js",
    ],
    "_set": Map {
      "one.js" => 0,
      "two.js" => 1,
    },
  },
  "file": "test.js",
  "sourceRoot": "http://example.com/www/js/",
  "sourcesContent": null,
}
`;

exports[`TerserPlugin buildWarning method 1`] = `"Terser Plugin: Warning [test.js:1,1]"`;

exports[`TerserPlugin buildWarning method 2`] = `"Terser Plugin: Warning [test.js:1,1]"`;

exports[`TerserPlugin buildWarning method 3`] = `"Terser Plugin: Warning [test.js:1,1]"`;

exports[`TerserPlugin buildWarning method 4`] = `"Terser Plugin: Warning [http://example.com/www/js/one.js:1,1]"`;

exports[`TerserPlugin buildWarning method 5`] = `"Terser Plugin: Warning [http://example.com/www/js/one.js:1,1]"`;

exports[`TerserPlugin buildWarning method 6`] = `null`;

exports[`TerserPlugin should emit an error on a broken code in not parallel mode: assets 1`] = `
Object {
  "broken.js": "\`Broken===",
  "one.js": "(()=>{var r={791:r=>{r.exports=function(){console.log(7)}}},o={};!function t(e){if(o[e])return o[e].exports;var n=o[e]={exports:{}};return r[e](n,n.exports,t),n.exports}(791)})();",
  "two.js": "(()=>{var r={791:r=>{r.exports=function(){console.log(7)}}},o={};!function t(e){if(o[e])return o[e].exports;var n=o[e]={exports:{}};return r[e](n,n.exports,t),n.exports}(791)})();",
}
`;

exports[`TerserPlugin should emit an error on a broken code in not parallel mode: errors 1`] = `
Array [
  "Error: broken.js from Terser
Unterminated template [broken.js:1,0]",
]
`;

exports[`TerserPlugin should emit an error on a broken code in not parallel mode: warnings 1`] = `Array []`;

exports[`TerserPlugin should emit an error on a broken code in parallel mode: assets 1`] = `
Object {
  "broken.js": "\`Broken===",
  "one.js": "(()=>{var r={791:r=>{r.exports=function(){console.log(7)}}},o={};!function t(e){if(o[e])return o[e].exports;var n=o[e]={exports:{}};return r[e](n,n.exports,t),n.exports}(791)})();",
  "two.js": "(()=>{var r={791:r=>{r.exports=function(){console.log(7)}}},o={};!function t(e){if(o[e])return o[e].exports;var n=o[e]={exports:{}};return r[e](n,n.exports,t),n.exports}(791)})();",
}
`;

exports[`TerserPlugin should emit an error on a broken code in parallel mode: errors 1`] = `
Array [
  "Error: broken.js from Terser
Unterminated template [broken.js:1,0]",
]
`;

exports[`TerserPlugin should emit an error on a broken code in parallel mode: warnings 1`] = `Array []`;

exports[`TerserPlugin should regenerate hash: assets 1`] = `
Object {
  "598.598.e99482d3a83a2cd964e9.js": "(window.webpackJsonpterser_webpack_plugin=window.webpackJsonpterser_webpack_plugin||[]).push([[598],{598:(e,p,s)=>{\\"use strict\\";s.r(p),s.d(p,{default:()=>n});const n=\\"async-dep\\"}}]);",
  "AsyncImportExport.01c22fca17352c78dfc4.js": "(()=>{\\"use strict\\";var e={},r={};function o(t){if(r[t])return r[t].exports;var n=r[t]={exports:{}};return e[t](n,n.exports,o),n.exports}o.m=e,o.d=(e,r)=>{for(var t in r)o.o(r,t)&&!o.o(e,t)&&Object.defineProperty(e,t,{enumerable:!0,get:r[t]})},o.f={},o.e=e=>Promise.all(Object.keys(o.f).reduce((r,t)=>(o.f[t](e,r),r),[])),o.u=e=>e+\\".\\"+e+\\".e99482d3a83a2cd964e9.js\\",o.o=(e,r)=>Object.prototype.hasOwnProperty.call(e,r),o.r=e=>{\\"undefined\\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:\\"Module\\"}),Object.defineProperty(e,\\"__esModule\\",{value:!0})},o.p=\\"\\",(()=>{var e={988:0};o.f.j=(r,t)=>{var n=o.o(e,r)?e[r]:void 0;if(0!==n)if(n)t.push(n[2]);else{var a=new Promise((o,t)=>{n=e[r]=[o,t]});t.push(n[2]=a);var i,s=o.p+o.u(r),u=document.createElement(\\"script\\");u.charset=\\"utf-8\\",u.timeout=120,o.nc&&u.setAttribute(\\"nonce\\",o.nc),u.src=s;var p=new Error;i=t=>{i=()=>{},u.onerror=u.onload=null,clearTimeout(d);var a=(()=>{if(o.o(e,r)&&(0!==(n=e[r])&&(e[r]=void 0),n))return n[1]})();if(a){var s=t&&(\\"load\\"===t.type?\\"missing\\":t.type),c=t&&t.target&&t.target.src;p.message=\\"Loading chunk \\"+r+\\" failed.\\\\n(\\"+s+\\": \\"+c+\\")\\",p.name=\\"ChunkLoadError\\",p.type=s,p.request=c,a(p)}};var d=setTimeout(()=>{i({type:\\"timeout\\",target:u})},12e4);u.onerror=u.onload=i,document.head.appendChild(u)}};var r=window.webpackJsonpterser_webpack_plugin=window.webpackJsonpterser_webpack_plugin||[],t=r.push.bind(r);r.push=function(r){for(var t,a,i=r[0],s=r[1],u=r[3],p=0,d=[];p<i.length;p++)a=i[p],o.o(e,a)&&e[a]&&d.push(e[a][0]),e[a]=0;for(t in s)o.o(s,t)&&(o.m[t]=s[t]);for(u&&u(o),n&&n(r);d.length;)d.shift()()};var n=t})(),o.e(598).then(o.bind(o,598)).then(()=>{console.log(\\"Good\\")})})();",
  "importExport.1849155bc0176c609852.js": "(()=>{\\"use strict\\"})();",
  "js.5f8ef07d287a40624049.js": "(()=>{var r={791:r=>{r.exports=function(){console.log(7)}}},o={};!function t(e){if(o[e])return o[e].exports;var n=o[e]={exports:{}};return r[e](n,n.exports,t),n.exports}(791)})();",
  "mjs.ff6419997a491a218598.js": "(()=>{var r={631:r=>{r.exports=function(){console.log(7)}}},o={};!function t(e){if(o[e])return o[e].exports;var n=o[e]={exports:{}};return r[e](n,n.exports,t),n.exports}(631)})();",
}
`;

exports[`TerserPlugin should regenerate hash: errors 1`] = `Array []`;

exports[`TerserPlugin should regenerate hash: warnings 1`] = `Array []`;

exports[`TerserPlugin should respect hash options #2: assets 1`] = `
Object {
  "main.js": "(()=>{var r={791:r=>{r.exports=function(){console.log(7)}}},o={};!function t(e){if(o[e])return o[e].exports;var n=o[e]={exports:{}};return r[e](n,n.exports,t),n.exports}(791)})();",
}
`;

exports[`TerserPlugin should respect hash options #2: errors 1`] = `Array []`;

exports[`TerserPlugin should respect hash options #2: warnings 1`] = `Array []`;

exports[`TerserPlugin should respect the hash options #1: assets 1`] = `
Object {
  "main.js": "(()=>{var r={791:r=>{r.exports=function(){console.log(7)}}},o={};!function t(e){if(o[e])return o[e].exports;var n=o[e]={exports:{}};return r[e](n,n.exports,t),n.exports}(791)})();",
}
`;

exports[`TerserPlugin should respect the hash options #1: errors 1`] = `Array []`;

exports[`TerserPlugin should respect the hash options #1: warnings 1`] = `Array []`;

exports[`TerserPlugin should work (without options): assets 1`] = `
Object {
  "main.js": "(()=>{var r={791:r=>{r.exports=function(){console.log(7)}}},o={};!function t(e){if(o[e])return o[e].exports;var n=o[e]={exports:{}};return r[e](n,n.exports,t),n.exports}(791)})();",
}
`;

exports[`TerserPlugin should work (without options): errors 1`] = `Array []`;

exports[`TerserPlugin should work (without options): warnings 1`] = `Array []`;

exports[`TerserPlugin should work and respect "terser" errors (the "parallel" option is "false"): errors 1`] = `
Array [
  "Error: main.js from Terser
Unexpected token name «Object», expected punc «,» [main.js:1,8]",
]
`;

exports[`TerserPlugin should work and respect "terser" errors (the "parallel" option is "false"): warnings 1`] = `Array []`;

exports[`TerserPlugin should work and respect "terser" errors (the "parallel" option is "true"): errors 1`] = `
Array [
  "Error: main.js from Terser
Unexpected token name «Object», expected punc «,» [main.js:1,8]",
]
`;

exports[`TerserPlugin should work and respect "terser" errors (the "parallel" option is "true"): warnings 1`] = `Array []`;

exports[`TerserPlugin should work as a minimizer: assets 1`] = `
Object {
  "main.js": "(()=>{var r={791:r=>{r.exports=function(){console.log(7)}}},o={};!function t(e){if(o[e])return o[e].exports;var n=o[e]={exports:{}};return r[e](n,n.exports,t),n.exports}(791)})();",
}
`;

exports[`TerserPlugin should work as a minimizer: errors 1`] = `Array []`;

exports[`TerserPlugin should work as a minimizer: warnings 1`] = `Array []`;

exports[`TerserPlugin should work as a plugin: assets 1`] = `
Object {
  "main.js": "(()=>{var r={791:r=>{r.exports=function(){console.log(7)}}},o={};!function t(e){if(o[e])return o[e].exports;var n=o[e]={exports:{}};return r[e](n,n.exports,t),n.exports}(791)})();",
}
`;

exports[`TerserPlugin should work as a plugin: errors 1`] = `Array []`;

exports[`TerserPlugin should work as a plugin: warnings 1`] = `Array []`;

exports[`TerserPlugin should work in multi compiler mode with the one plugin: assets 1`] = `
Object {
  "main-1.js": "/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ 791:
/***/ ((module) => {

// foo
/* @preserve*/
// bar
const a = 2 + 2;

module.exports = function Foo() {
  const b = 2 + 2;
  console.log(b + 1 + 2);
};


/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		if(__webpack_module_cache__[moduleId]) {
/******/ 			return __webpack_module_cache__[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	// startup
/******/ 	// Load entry module
/******/ 	// This entry module is referenced by other modules so it can't be inlined
/******/ 	__webpack_require__(791);
/******/ })()
;",
}
`;

exports[`TerserPlugin should work in multi compiler mode with the one plugin: assets 2`] = `
Object {
  "main-2.js": "(()=>{var r={791:r=>{r.exports=function(){console.log(7)}}},o={};!function t(e){if(o[e])return o[e].exports;var n=o[e]={exports:{}};return r[e](n,n.exports,t),n.exports}(791)})();",
}
`;

exports[`TerserPlugin should work in multi compiler mode with the one plugin: assets 3`] = `
Object {
  "main-3.js": "(()=>{\\"use strict\\"})();",
}
`;

exports[`TerserPlugin should work in multi compiler mode with the one plugin: compiler plugin count 1`] = `
Object {
  "additionalPass": 0,
  "afterCompile": 0,
  "afterDone": 0,
  "afterEmit": 1,
  "afterEnvironment": 0,
  "afterPlugins": 0,
  "afterResolvers": 0,
  "assetEmitted": 0,
  "beforeCompile": 0,
  "beforeRun": 1,
  "compilation": 48,
  "compile": 0,
  "contextModuleFactory": 0,
  "done": 1,
  "emit": 0,
  "entryOption": 1,
  "environment": 0,
  "failed": 0,
  "infrastructureLog": 0,
  "initialize": 0,
  "invalid": 1,
  "make": 1,
  "normalModuleFactory": 1,
  "run": 0,
  "shouldEmit": 1,
  "thisCompilation": 5,
  "watchClose": 0,
  "watchRun": 0,
}
`;

exports[`TerserPlugin should work in multi compiler mode with the one plugin: errors 1`] = `Array []`;

exports[`TerserPlugin should work in multi compiler mode with the one plugin: errors 2`] = `Array []`;

exports[`TerserPlugin should work in multi compiler mode with the one plugin: errors 3`] = `Array []`;

exports[`TerserPlugin should work in multi compiler mode with the one plugin: warnings 1`] = `Array []`;

exports[`TerserPlugin should work in multi compiler mode with the one plugin: warnings 2`] = `Array []`;

exports[`TerserPlugin should work in multi compiler mode with the one plugin: warnings 3`] = `Array []`;

exports[`TerserPlugin should work in multi compiler mode: assets 1`] = `
Object {
  "main-1.js": "/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ 791:
/***/ ((module) => {

// foo
/* @preserve*/
// bar
const a = 2 + 2;

module.exports = function Foo() {
  const b = 2 + 2;
  console.log(b + 1 + 2);
};


/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		if(__webpack_module_cache__[moduleId]) {
/******/ 			return __webpack_module_cache__[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	// startup
/******/ 	// Load entry module
/******/ 	// This entry module is referenced by other modules so it can't be inlined
/******/ 	__webpack_require__(791);
/******/ })()
;",
}
`;

exports[`TerserPlugin should work in multi compiler mode: assets 2`] = `
Object {
  "main-2.js": "(()=>{var r={791:r=>{r.exports=function(){console.log(7)}}},o={};!function t(e){if(o[e])return o[e].exports;var n=o[e]={exports:{}};return r[e](n,n.exports,t),n.exports}(791)})();",
}
`;

exports[`TerserPlugin should work in multi compiler mode: assets 3`] = `
Object {
  "main-3.js": "(()=>{\\"use strict\\"})();",
}
`;

exports[`TerserPlugin should work in multi compiler mode: compiler plugin count 1`] = `
Object {
  "additionalPass": 0,
  "afterCompile": 0,
  "afterDone": 0,
  "afterEmit": 1,
  "afterEnvironment": 0,
  "afterPlugins": 0,
  "afterResolvers": 0,
  "assetEmitted": 0,
  "beforeCompile": 0,
  "beforeRun": 1,
  "compilation": 48,
  "compile": 0,
  "contextModuleFactory": 0,
  "done": 1,
  "emit": 0,
  "entryOption": 1,
  "environment": 0,
  "failed": 0,
  "infrastructureLog": 0,
  "initialize": 0,
  "invalid": 1,
  "make": 1,
  "normalModuleFactory": 1,
  "run": 0,
  "shouldEmit": 1,
  "thisCompilation": 5,
  "watchClose": 0,
  "watchRun": 0,
}
`;

exports[`TerserPlugin should work in multi compiler mode: errors 1`] = `Array []`;

exports[`TerserPlugin should work in multi compiler mode: errors 2`] = `Array []`;

exports[`TerserPlugin should work in multi compiler mode: errors 3`] = `Array []`;

exports[`TerserPlugin should work in multi compiler mode: warnings 1`] = `Array []`;

exports[`TerserPlugin should work in multi compiler mode: warnings 2`] = `Array []`;

exports[`TerserPlugin should work in multi compiler mode: warnings 3`] = `Array []`;

exports[`TerserPlugin should write stdout and stderr of workers to stdout and stderr of main process in not parallel mode: assets 1`] = `
Object {
  "one.js": "",
  "two.js": "",
}
`;

exports[`TerserPlugin should write stdout and stderr of workers to stdout and stderr of main process in not parallel mode: errors 1`] = `Array []`;

exports[`TerserPlugin should write stdout and stderr of workers to stdout and stderr of main process in not parallel mode: process stderr output 1`] = `
"stderr
stderr
"
`;

exports[`TerserPlugin should write stdout and stderr of workers to stdout and stderr of main process in not parallel mode: process stdout output 1`] = `
"stdout
stdout
"
`;

exports[`TerserPlugin should write stdout and stderr of workers to stdout and stderr of main process in not parallel mode: warnings 1`] = `Array []`;

exports[`TerserPlugin should write stdout and stderr of workers to stdout and stderr of main process in parallel mode: assets 1`] = `
Object {
  "one.js": "",
  "two.js": "",
}
`;

exports[`TerserPlugin should write stdout and stderr of workers to stdout and stderr of main process in parallel mode: errors 1`] = `Array []`;

exports[`TerserPlugin should write stdout and stderr of workers to stdout and stderr of main process in parallel mode: process stderr output 1`] = `
"stderr
stderr
"
`;

exports[`TerserPlugin should write stdout and stderr of workers to stdout and stderr of main process in parallel mode: process stdout output 1`] = `
"stdout
stdout
"
`;

exports[`TerserPlugin should write stdout and stderr of workers to stdout and stderr of main process in parallel mode: warnings 1`] = `Array []`;
