// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`worker normalizes when minimizerOptions.output.comments is string: all 1`] = `
Object {
  "code": "var foo=1;/* hello */
// Comment
/* duplicate */
/* duplicate */",
  "extractedComments": Array [],
}
`;

exports[`worker should match snapshot when minimizerOptions.compress.comments is boolean 1`] = `
Object {
  "code": "var foo=1;",
  "extractedComments": Array [],
}
`;

exports[`worker should match snapshot when minimizerOptions.compress.comments is object 1`] = `
Object {
  "code": "var foo=1;",
  "extractedComments": Array [],
}
`;

exports[`worker should match snapshot when minimizerOptions.extractComments is number 1`] = `
Object {
  "code": "var foo=1;",
  "extractedComments": Array [],
}
`;

exports[`worker should match snapshot when minimizerOptions.mangle is "null" 1`] = `
Object {
  "code": "var foo=1;",
  "extractedComments": Array [],
}
`;

exports[`worker should match snapshot when minimizerOptions.mangle is boolean 1`] = `
Object {
  "code": "var foo=1;",
  "extractedComments": Array [],
}
`;

exports[`worker should match snapshot when minimizerOptions.mangle is object 1`] = `
Object {
  "code": "var a=1;",
  "extractedComments": Array [],
}
`;

exports[`worker should match snapshot when minimizerOptions.output.comments is string: some 1`] = `
Object {
  "code": "var foo=1;",
  "extractedComments": Array [],
}
`;

exports[`worker should match snapshot when options.extractComments is "all" value 1`] = `
Object {
  "code": "var foo=1;",
  "extractedComments": Array [
    "/* hello */",
    "// Comment",
    "/* duplicate */",
  ],
}
`;

exports[`worker should match snapshot when options.extractComments is "false" 1`] = `
Object {
  "code": "var foo=1;",
  "extractedComments": Array [],
}
`;

exports[`worker should match snapshot when options.extractComments is "some" value 1`] = `
Object {
  "code": "var foo=1;",
  "extractedComments": Array [],
}
`;

exports[`worker should match snapshot when options.extractComments is "true" 1`] = `
Object {
  "code": "var foo=1;",
  "extractedComments": Array [],
}
`;

exports[`worker should match snapshot when options.extractComments is "true" 2`] = `
"var foo = 1;/* hello */
// Comment
/* duplicate */
/* duplicate */"
`;

exports[`worker should match snapshot when options.extractComments is Function 1`] = `
Object {
  "code": "var foo=1;",
  "extractedComments": Array [
    "/* hello */",
    "// Comment",
    "/* duplicate */",
  ],
}
`;

exports[`worker should match snapshot when options.extractComments is Object with "all" value 1`] = `
Object {
  "code": "var foo=1;",
  "extractedComments": Array [
    "/* hello */",
    "// Comment",
    "/* duplicate */",
  ],
}
`;

exports[`worker should match snapshot when options.extractComments is Object with "some" value 1`] = `
Object {
  "code": "var foo=1;",
  "extractedComments": Array [],
}
`;

exports[`worker should match snapshot when options.extractComments is Object with "true" value 1`] = `
Object {
  "code": "var foo=1;",
  "extractedComments": Array [],
}
`;

exports[`worker should match snapshot when options.extractComments is RegExp 1`] = `
Object {
  "code": "var foo=1;",
  "extractedComments": Array [
    "/* hello */",
  ],
}
`;

exports[`worker should match snapshot when options.extractComments is empty Object 1`] = `
Object {
  "code": "var foo=1;",
  "extractedComments": Array [],
}
`;

exports[`worker should match snapshot with extract option set to a single file 1`] = `
Object {
  "code": "/******/function hello(o){console.log(o)}",
  "extractedComments": Array [],
}
`;

exports[`worker should match snapshot with options.inputSourceMap 1`] = `
Object {
  "code": "function foo(f){if(f)return bar()}",
  "extractedComments": Array [],
  "map": Object {
    "mappings": "AAAA,SAASA,IAAIC,GAAK,GAAIA,EAAK,OAAOC",
    "names": Array [
      "foo",
      "x",
      "bar",
    ],
    "sources": Array [
      "test6.js",
    ],
    "version": 3,
  },
}
`;
